# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre on Mon Apr 18 13:27:06 2022
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
import sys, os, configparser
# end wxGlade


class MainDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainDialog.__init__
        print("")
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((730, 400))
        self.SetTitle(_("guinotify"))
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap("/home/mic/Projekte/guinotify/128x128.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)

        sizer_3 = wx.BoxSizer(wx.VERTICAL)

        self.lsNotifications = wx.ListCtrl(self.panel_1, wx.ID_ANY, style=wx.BORDER_DEFAULT | wx.FULL_REPAINT_ON_RESIZE | wx.LC_EDIT_LABELS | wx.LC_HRULES | wx.LC_REPORT | wx.LC_SINGLE_SEL | wx.LC_VRULES)
        self.lsNotifications.AppendColumn(_("File/Dir"), format=wx.LIST_FORMAT_LEFT, width=200)
        self.lsNotifications.AppendColumn(_("Event"), format=wx.LIST_FORMAT_LEFT, width=100)
        self.lsNotifications.AppendColumn(_("Options"), format=wx.LIST_FORMAT_LEFT, width=150)
        self.lsNotifications.AppendColumn(_("DoWhat"), format=wx.LIST_FORMAT_LEFT, width=200)
        self.lsNotifications.AppendColumn(_("Active"), format=wx.LIST_FORMAT_LEFT, width=50)
        item = wx.ListItem()
        item.SetText("/var/lib/boinc/job_log_milkyway.cs.rpi.edu_milkyway.txt")
        item.SetId(1)

        self.lsNotifications.InsertItem(item)
        #self.lsNotifications.InsertItem(1, "/var/lib/boinc/job_log_milkyway.cs.rpi.edu_milkyway.txt")

        #self.lsNotifications.InsertItem(2, "watch2")
        #self.lsNotifications.InsertItem(3, "watch3")
        #self.lsNotifications.InsertItem(4, "watch4")
        #self.lsNotifications.InsertItem(5, "watch5")

        self.lsNotifications.SetItem(0,1,"MODIFY", -1);
        self.lsNotifications.SetItem(0,2,"no-dereference", -1);
        self.lsNotifications.SetItem(0,3,"echo -e \\07 ; espeak-ng -vmb-de5 'Task fertig.' -s 175;", -1);
        self.lsNotifications.SetItem(0,4,"Yes", -1);
        sizer_3.Add(self.lsNotifications, 1, wx.EXPAND, 0)

        label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, _("Linux: 5.16.12-lqx1-1-lqx  inotify-tools: 3.22.1.0  guinotify: 1.0.1  wxWidgets: 3.0.5  wxPython: 4.1.1  Python: 3.10.4"))
        sizer_3.Add(label_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.BOTTOM | wx.TOP, 5)

        sizer_2 = wx.StdDialogButtonSizer()
        sizer_1.Add(sizer_2, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.SHAPED, 4)

        self.button_OK = wx.Button(self, wx.ID_OK, "")
        self.button_OK.SetDefault()
        sizer_2.AddButton(self.button_OK)

        self.button_NO = wx.Button(self, wx.ID_NO, "")
        sizer_2.AddButton(self.button_NO)

        self.button_UNDO = wx.Button(self, wx.ID_UNDO, "")
        sizer_2.Add(self.button_UNDO, 0, 0, 0)

        self.button_CANCEL = wx.Button(self, wx.ID_HOME, "")
        sizer_2.Add(self.button_CANCEL, 0, 0, 0)

        self.button_APPLY = wx.Button(self, wx.ID_APPLY, "")
        sizer_2.AddButton(self.button_APPLY)

        sizer_2.Add((0, 0), 0, 0, 0)

        self.button_HELP = wx.Button(self, wx.ID_HELP, "")
        sizer_2.AddButton(self.button_HELP)

        self.button_CLOSE = wx.Button(self, wx.ID_CLOSE, "")
        sizer_2.AddButton(self.button_CLOSE)

        sizer_2.Realize()

        self.panel_1.SetSizer(sizer_3)

        self.SetSizer(sizer_1)

        self.SetAffirmativeId(self.button_OK.GetId())
        self.SetEscapeId(self.button_CANCEL.GetId())

        self.Layout()
        self.Centre()

        self.lsNotifications.Bind(wx.EVT_LIST_COL_CLICK, self.Col_Select)
        self.lsNotifications.Bind(wx.EVT_LIST_DELETE_ITEM, self.Item_Delete)
        self.lsNotifications.Bind(wx.EVT_LIST_END_LABEL_EDIT, self.Item_Edited)
        self.lsNotifications.Bind(wx.EVT_LIST_INSERT_ITEM, self.Item_Insert)
        self.lsNotifications.Bind(wx.EVT_LIST_ITEM_ACTIVATED, self.Item_Active)
        self.lsNotifications.Bind(wx.EVT_LIST_ITEM_FOCUSED, self.Item_Focus)
        self.lsNotifications.Bind(wx.EVT_LIST_ITEM_SELECTED, self.Item_Select)
        self.button_OK.Bind(wx.EVT_BUTTON, self.btnOK_click)
        self.button_NO.Bind(wx.EVT_BUTTON, self.btnNO_click)
        self.button_UNDO.Bind(wx.EVT_BUTTON, self.btnUNDO_click)
        self.button_CANCEL.Bind(wx.EVT_BUTTON, self.btnCANCEL_click)
        self.button_APPLY.Bind(wx.EVT_BUTTON, self.btnAPPLY_click)
        self.button_HELP.Bind(wx.EVT_BUTTON, self.btnHELP_click)
        self.button_CLOSE.Bind(wx.EVT_BUTTON, self.btnCLOSE_click)
        # end wxGlade

    def btnOK_click(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'btnOK_click' not implemented!")
        event.Skip()
    def btnNO_click(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'btnNO_click' not implemented!")
        event.Skip()
    def btnUNDO_click(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'btnUNDO_click' not implemented!")
        event.Skip()
    def btnCANCEL_click(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'btnCANCEL_click' not implemented!")
        event.Skip()
    def btnAPPLY_click(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'btnAPPLY_click' not implemented!")
        event.Skip()
    def btnHELP_click(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'btnHELP_click' not implemented!")
        event.Skip()
    def btnCLOSE_click(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'btnCLOSE_click' not implemented!")
        event.Skip()
    def Item_Select(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'Item_Select' not implemented!")
        event.Skip()
    def Col_Select(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'Col_Select' not implemented!")
        event.Skip()
    def Item_Focus(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'Item_Focus' not implemented!")
        event.Skip()
    def Item_Delete(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'Item_Delete' not implemented!")
        event.Skip()
    def Item_Insert(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'Item_Insert' not implemented!")
        event.Skip()
    def Item_Active(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'Item_Active' not implemented!")
        event.Skip()
    def Item_Edited(self, event):  # wxGlade: MainDialog.<event_handler>
        print("Event handler 'Item_Edited' not implemented!")
        event.Skip()
# end of class MainDialog
